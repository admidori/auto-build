#!/bin/bash

# Version hard coding
VERSION=beta1.2
STATUS=STABLE
YEAR=2022

TMP=$(readlink /usr/local/bin/abd)
ABD_DIR=${TMP%/abd}
CNT=0
EXEC=0

usage() {
    echo "Usage: abd [OPTIONS] (LANGUAGE) (DIRECTORY) (FILE)"
    echo "  -h, --help      : Print help message."
    echo "  -v, --version   : Print version infomation."
    echo "  -e              : Exec docker container"
    exit 0
}

version() {
    echo "### SOFTWARE INFOMATION ###"
    echo "Auto build (abd) --$STATUS"
    echo "Version:$VERSION"
    echo ""
    echo "Copyright (C) $YEAR Midori Ado"
    echo "Licensed under the MIT License."
    echo ""
    echo "### MORE INFOMATION ###"
    echo "GitHub page: https://github.com/rp-agota/auto-build"
    exit 0
}

for OPT in "$@"
do
    case $OPT in
        -h | --help)
            usage
            ;;

        -v | --version)
            version
            ;;
        
        -e)
            EXEC=1
            shift
            ;;
        
        -*)
            echo "Unknown option: $1" 1>&2
            exit 1
            ;;
        
        *)
            CNT=$((CNT+1))
            case $CNT in
                1)
                    LANGUAGE=$1
                    ;;
                2)
                    DIRECTORY=$1
                    ;;
                3)
                    FILE=$1
                    ;;
            esac
            shift
            ;;
    esac

done

if [ $CNT -lt 3 ]; then
    echo [ERROR]:Input ERROR
    exit 1
else
    NOW_DIR=$(pwd)

    cp $NOW_DIR/$DIRECTORY/* $ABD_DIR/$LANGUAGE/src
    echo name=${FILE} > $ABD_DIR/info.env
		cd $ABD_DIR
    if [ $EXEC -eq 1 ]; then
				echo exec=1 >> $ABD_DIR/info.env
				docker-compose exec $LANGUAGE /bin/bash
		else
			echo exec=0 >> $ABD_DIR/info.env
			docker-compose run --rm $LANGUAGE
			echo ""
			echo "BUILD COMPLETE!"
			echo ""
			echo "###########  OUTPUT  ##########"
			cat $ABD_DIR/$LANGUAGE/src/output.txt
			echo "############# END #############"
		fi
    cd $ABD_DIR/$LANGUAGE/src
		for f in *
    do
        [[ "$f" == "setup.sh" ]] && continue
        rm -r $f
    done
fi
